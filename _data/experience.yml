- company: "(주)우노트레이딩"
  position: "Fullstack Developer"
  duration: "2023.04 ~ 2024.10"
  description: |
    <ul>
      <li><strong>도메인 특성</strong>
        <ul>
          <li>이탈리아 명품 부띠끄 40여 곳에서 제공되는 재고 데이터(일일 10만 건 이상)를 안정적으로 처리</li>
        </ul>
      </li>
      <li><strong>문제</strong>
        <ul>
          <li>사내 개발 인프라 부재로 VPC 구성부터 서비스 개발까지 전 과정을 구축해야 함</li>
          <li>명품 거래 특성상, 재고 정보 오류 시 직·간접적 비용 발생</li>
        </ul>
      </li>
      <li><strong>해결</strong>
        <ul>
          <li><strong>인프라 최적화</strong>: VPC 구성, ARM64 아키텍처 도입(서버 비용 월 15% 절감), GitHub Actions + CodePipeline으로 자동 배포</li>
          <li><strong>데이터 파이프라인</strong>: Kotlin + Apache POI로 엑셀·CSV 라인시트를 자동 파싱·검증</li>
          <li><strong>비동기 아키텍처</strong>: AWS SQS로 메시지 기반 처리, 트래픽 부하 분산 및 확장성 확보</li>
          <li><strong>풀 타입 힌트</strong>: 코드 품질과 가독성 향상, CI/CD에서 조기 에러 감지</li>
          <li><strong>AI 검증</strong>: OpenAI GPT-4 파인튜닝으로 SKU·가격 정보 검증 자동화 → 운영팀 업무 효율 상승</li>
        </ul>
      </li>
      <li><strong>성과</strong>
        <ul>
          <li>대규모 재고 데이터를 지연 없이 일 10만 건 이상 처리, 파싱 오류 전분기 대비 50% 감소</li>
          <li>검증 자동화로 운영팀 업무 1시간/일 절감, 배포 주기 및 시간 50% 이상 단축</li>
        </ul>
      </li>
    </ul>

- company: "PFC Technologies"
  position: "Backend Developer, 투자팀 엔지니어링 매니저"
  duration: "2022.01 ~ 2023.03"
  description: |
    <ul>
      <li><strong>문제</strong>
        <ul>
          <li>모놀리식 Django 서비스에서 투자 도메인 로직이 여러 모듈에 혼재, 성능 저하와 장애 대응 어려움</li>
          <li>대출, 상환 등 타 도메인과 코드·DB가 중첩되어 책임 경계가 모호</li>
        </ul>
      </li>
      <li><strong>해결</strong>
        <ul>
          <li><strong>도메인 분리 설득·협업</strong>: 투자팀 엔지니어링 매니저로서, 타 팀에게 분리 필요성과 기대 효과를 적극 납득</li>
          <li><strong>투자 로직 식별·재정립</strong>: 모놀리식 내 투자 로직을 발굴해 투자팀 중심 업무 일원화</li>
          <li><strong>FastAPI + SQLAlchemy</strong> 기반으로 투자 도메인 마이크로서비스 분리, 레거시 Django 연동 최소화</li>
          <li><strong>리팩토링</strong>: 중복 모듈 추상화·최적화로 유지보수 비용 절감</li>
        </ul>
      </li>
      <li><strong>성과</strong>
        <ul>
          <li>투자 도메인 분리 후 장애 원인 파악·기능 릴리스가 수월해짐</li>
          <li>신용평가사 및 은행 등 외부 금융기관과의 EI(External Interface) 유지 보수 및 연동 안정성 강화</li>
        </ul>
      </li>
    </ul>

- company: "(주)그럼에도"
  position: "Fullstack Developer"
  duration: "2021.01 ~ 2021.10"
  description: |
    <ul>
      <li><strong>문제</strong>
        <ul>
          <li>신규 여성패션 이커머스 서비스 런칭 시, 다량의 상품 데이터를 실시간 노출 + UI 성능도 중요</li>
        </ul>
      </li>
      <li><strong>해결</strong>
        <ul>
          <li><strong>GraphQL 서버 구축</strong>: Django & Graphene으로 상품 데이터를 구조적으로 제공</li>
          <li><strong>ORM 최적화</strong>: Eager loading으로 GraphQL 응답 속도 80% 향상</li>
          <li><strong>어드민 UI 개선</strong>: Ant Design Form + Custom React Hooks, 리렌더링 최소화</li>
        </ul>
      </li>
      <li><strong>성과</strong>
        <ul>
          <li>병목 구간 응답 시간 80% 단축, 안정적 사용자 경험 확보</li>
          <li>커머스 운영을 위한 상품 어드민 동시 제공, 초기 CS 문의 30% 감소</li>
        </ul>
      </li>
    </ul>

- company: "Tooravel (공동경영인)"
  position: "Co-founder / 공동경영인"
  duration: "2018.01 ~ 2020.08"
  description: |
    <ul>
      <li><strong>서비스 운영 총괄</strong>: 광고·제휴, CS 프로세스 표준화</li>
      <li><strong>파트너사 이탈률</strong> 20% 이하 유지, 월 최고 매출 1800만 원 달성</li>
    </ul>

- company: "Tooravel (Fullstack Developer)"
  position: "Fullstack Developer"
  duration: "2017.08 ~ 2018.01"
  description: |
    <ul>
      <li><strong>문제</strong>
        <ul>
          <li>여행 플랫폼 스타트업 초기 상황에서 빠른 MVP 개발 + 안정적 운영 필요</li>
        </ul>
      </li>
      <li><strong>해결</strong>
        <ul>
          <li><strong>서버 리팩토링</strong>: Django QuerySet & Model Manager 최적화, 처리 성능 30% 이상 향상</li>
          <li><strong>파트너 관리 페이지 구축</strong>: Custom Django Admin + Bootstrap + jQuery</li>
        </ul>
      </li>
      <li><strong>성과</strong>
        <ul>
          <li>초기 MVP 성공 런칭, 이후 운영 기반 마련</li>
        </ul>
      </li>
    </ul>
